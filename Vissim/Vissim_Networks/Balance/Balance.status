
######                 General    ######
# --help=0                                 # -h : Prints this message
--stopOnUnknownParam=0                   # Stop if unkown param entered
--offsetOptimization=0                   # do the OffsetOptimization for each Traffic Light
--seed=42                                # -S : Random number seed

######    ES mutation             ######
--isotropic=1                            # -i : Isotropic self-adaptive mutation
--stDev=0                                # -s : One self-adaptive stDev per variable
--correl=0                               # -c : Use correlated mutations

######    Evolution Engine        ######
--popSize=100                            # -n : Population Size
--popSize=100                            # -P : Population Size
--selection=DetTour(2)                   # -S : Selection: Roulette, Ranking(p,e), DetTour(T), StochTour(t), Sequential(ordered/unordered) or EliteSequentialSelect
--nbOffspring=250%                       # -O : Nb of offspring (percentage or absolute)
--replacement=General                    # Type of replacement: General, or Generational, ESComma, ESPlus, SSGA(T), EP(T), G3, MGG(T)

######    Evolution Engine / Replacement    ######
--elite=1                                # Nb of elite parents (percentage or absolute)
--eliteType=1                            # Strong (true) or weak (false) elitism (set elite to 0 for none)
--surviveParents=20%                     # Nb of surviving parents (percentage or absolute)
--reduceParents=Deterministic            # Parents reducer: Deterministic, EP(T), DetTour(T), StochTour(t), Uniform
--surviveOffspring=100%                  # Nb of surviving offspring (percentage or absolute)
--reduceOffspring=Deterministic          # Offspring reducer: Deterministic, EP(T), DetTour(T), StochTour(t), Uniform
--reduceFinal=Deterministic              # Final reducer: Deterministic, EP(T), DetTour(T), StochTour(t), Uniform

######    Genotype Initialization    ######
# --vecSize=67                             # -n : The number of variables
--initBounds=67[0,1]                     # -B : Bounds for initialization (MUST be bounded)
--sigmaInit=0.2                          # -s : Initial value for Sigmas (with a '%' -> scaled by the range of each variable)
# --vecSigmaInit=67 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2  # -S : Initial value for Sigmas (only used when initSigma is not scaled)

######    Output                  ######
--useEval=0                              # Use nb of eval. as counter (vs nb of gen.)
--useTime=1                              # Display time (s) every generation
--printBestStat=0                        # Print Best/avg/stdev every gen.
--printPop=0                             # Print sorted pop. every gen.

######    Output - Disk           ######
--resDir=.\PTV Balance PTV Epics Vision Suite Workflow StandardDemand_BAL-Log\ # Directory to store DISK outputs
--resDir=.\PTV                           # Directory to store DISK outputs
--eraseDir=0                             # erase files in dirName if any
--fileBestStat=0                         # Output bes/avg/std to file

######    Output - Graphical      ######
--plotBestStat=0                         # Plot Best/avg Stat
--plotHisto=0                            # Plot histogram of fitnesses

######    Persistence             ######
--Load=.\PTV Balance PTV Epics Vision Suite Workflow StandardDemand_BAL-Log\BAL_LastGeneration.last # -L : A save file to restart from
--saveBestState=.\PTV Balance PTV Epics Vision Suite Workflow StandardDemand_BAL-Log\BAL_LastGeneration.last # Filename for the last generation(to be used for the next run)
--status=                                # Status file
--bestStatePopSize=5                     # Size of Population to start with (i.e. from the last run)
--recomputeFitness=1                     # -r : Recompute the fitness after re-loading the pop.?
# --saveFrequency=0                        # Save every F generation (0 = only final state, absent = never)
# --saveTimeInterval=0                     # Save every T seconds (0 or absent = never)
--status=Balance.status                  # Status file

######    Stopping criterion      ######
--minGen=20                              # -g : Minimum number of generations
--maxGen=100                             # -G : Maximum number of generations () = none)
--steadyGen=25                           # -s : Number of generations with no improvement
--maxEval=0                              # -E : Maximum number of evaluations (0 = none)
--targetFitness=0                        # -T : Stop when fitness reaches
# --secondsElapsed=290                     # Stops when seconds elapsed (all other stopping criterions will be ignored)

######    Variation Operators     ######
--objectBounds=67[0,1]                   # -B : Bounds for variables
--operator=SGA                           # -o : Description of the operator (SGA only now)
--pCross=0.9                             # -C : Probability of Crossover
--pMut=0.9                               # -M : Probability of Mutation
# --crossType=global                       # -C : Type of ES recombination (global or standard)
# --crossObj=discrete                      # -O : Recombination of object variables (discrete, intermediate or none)
--crossStdev=intermediate                # -S : Recombination of mutation strategy parameters (intermediate, discrete or none)
--TauLoc=1                               # -l : Local Tau (before normalization)
